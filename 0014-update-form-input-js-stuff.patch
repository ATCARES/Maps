From 8ba19f25c1ab590276c05aefea5f6d62c8e5f312 Mon Sep 17 00:00:00 2001
From: jeroendedauw <jeroendedauw@gmail.com>
Date: Tue, 15 May 2012 01:05:55 +0200
Subject: [PATCH 14/14] update form input js stuff

Change-Id: I4acf8f87ec59b81021c315efe9e6c3d034ac1c8b
---
 includes/forminputs/SM_FormInput.php               |   38 +++++--------------
 .../services/GoogleMaps3/ext.sm.googlemapsinput.js |   40 +++++++-------------
 .../services/OpenLayers/ext.sm.openlayersinput.js  |   32 +++++++---------
 includes/services/YahooMaps/ext.sm.yahoomaps.js    |   32 +++++++---------
 4 files changed, 49 insertions(+), 93 deletions(-)

diff --git a/includes/forminputs/SM_FormInput.php b/includes/forminputs/SM_FormInput.php
index d10cc0d..84a0d99 100644
--- a/includes/forminputs/SM_FormInput.php
+++ b/includes/forminputs/SM_FormInput.php
@@ -129,7 +129,7 @@ class SMFormInput {
 			
 			$params['inputname'] = $input_name;
 			
-			$output = $this->getInputHTML( $params, $wgParser, $mapName ) . $this->getJSON( $params, $wgParser, $mapName );
+			$output = $this->getInputHTML( $params, $wgParser, $mapName );
 			
 			$this->service->addResourceModules( $this->getResourceModules() );
 			
@@ -171,37 +171,19 @@ class SMFormInput {
 	 * @return string
 	 */
 	protected function getInputHTML( array $params, Parser $parser, $mapName ) {
-		return Html::element(
+		return Html::rawElement(
 			'div',
 			array(
 				'id' => $mapName . '_forminput',
-				'style' => 'display: inline'
+				'style' => 'display: inline',
+				'class' => 'sminput sminput-' . $this->service->getName()
 			),
-			wfMsg( 'semanticmaps-loading-forminput' )
-		);
-	}
-
-	/**
-	 * Returns the JSON with the maps data.
-	 *
-	 * @since 1.0
-	 *
-	 * @param array $params
-	 * @param Parser $parser
-	 * @param string $mapName
-	 * 
-	 * @return string
-	 */	
-	protected function getJSON( array $params, Parser $parser, $mapName ) {
-		$object = $this->getJSONObject( $params, $parser );
-		
-		if ( $object === false ) {
-			return '';
-		}
-		
-		return Html::inlineScript(
-			MapsMapper::getBaseMapJSON( $this->service->getName() . '_forminputs' )
-			. "mwmaps.{$this->service->getName()}_forminputs.{$mapName}=" . FormatJson::encode( $object ) . ';'
+			wfMsgHtml( 'semanticmaps-loading-forminput' ) .
+				Html::element(
+					'div',
+					array( 'style' => 'display:none', 'class' => 'sminputdata' ),
+					FormatJson::encode( $this->getJSONObject( $params, $parser ) )
+				)
 		);
 	}
 	
diff --git a/includes/services/GoogleMaps3/ext.sm.googlemapsinput.js b/includes/services/GoogleMaps3/ext.sm.googlemapsinput.js
index 220099f..7b9b144 100644
--- a/includes/services/GoogleMaps3/ext.sm.googlemapsinput.js
+++ b/includes/services/GoogleMaps3/ext.sm.googlemapsinput.js
@@ -1,33 +1,19 @@
 /**
  * JavaScript for the Google Maps v3 form input in the Semantic Maps extension.
- * @see http://www.mediawiki.org/wiki/Extension:Semantic_Maps
- * 
- * @since 1.0
- * @ingroup SemanticMaps
- * 
+ * @see https://www.mediawiki.org/wiki/Extension:Semantic_Maps
+ *
  * @licence GNU GPL v2+
  * @author Jeroen De Dauw <jeroendedauw at gmail dot com>
  */
+(function( $ ) {
 
-jQuery(document).ready(function() {
-	if ( true ) { // TODO
-		for ( i in window.mwmaps.googlemaps3_forminputs ) {
-			if ( window.mwmaps.googlemaps3_forminputs[i].ismulti ) {
-				jQuery( '#' + i + '_forminput' ).gmapsmultiinput( i, window.mwmaps.googlemaps3_forminputs[i] );
-			}
-			else {
-				jQuery( '#' + i + '_forminput' ).googlemapsinput( i, window.mwmaps.googlemaps3_forminputs[i] );
-			}
-		}
-	}
-	else {
-		alert( mediaWiki.msg( 'maps-googlemaps3-incompatbrowser' ) );
-		
-		for ( i in window.mwmaps.googlemaps3_forminputs ) {
-			jQuery( '#' + i + '_forminput' )
-				.html( $( '<input />' )
-					.attr( { 'name': i, 'value': semanticMaps.buildInputValue( window.mwmaps.googlemaps3_forminputs[i].locations ) } )
-				);
-		}
-	}	
-});
+	$( document ).ready( function() {
+
+		$( '.sminput-googlemaps3' ).each( function() {
+			var $this = $( this );
+			$this.googlemapsinput( $this.attr( 'id' ), jQuery.parseJSON( $this.find( 'div').text() ) );
+		} );
+
+	} );
+
+})( window.jQuery );
\ No newline at end of file
diff --git a/includes/services/OpenLayers/ext.sm.openlayersinput.js b/includes/services/OpenLayers/ext.sm.openlayersinput.js
index 911eaeb..af30ef5 100644
--- a/includes/services/OpenLayers/ext.sm.openlayersinput.js
+++ b/includes/services/OpenLayers/ext.sm.openlayersinput.js
@@ -1,25 +1,19 @@
 /**
  * JavaScript for the OpenLayers form input in the Semantic Maps extension.
- * @see http://www.mediawiki.org/wiki/Extension:Semantic_Maps
- * 
- * @since 1.0
- * @ingroup SemanticMaps
- * 
+ * @see https://www.mediawiki.org/wiki/Extension:Semantic_Maps
+ *
  * @licence GNU GPL v2+
  * @author Jeroen De Dauw <jeroendedauw at gmail dot com>
  */
+(function( $ ) {
 
-jQuery(document).ready(function() {
-	if ( true ) {
-		for ( i in window.mwmaps.openlayers_forminputs ) {
-			jQuery( '#' + i + '_forminput' ).openlayersinput( i, window.mwmaps.openlayers_forminputs[i] );
-		}
-	}
-	else {
-		alert( mediaWiki.msg( 'maps-openlayers-incompatbrowser' ) );
-		
-		for ( i in window.mwmaps.openlayers_forminputs ) {
-			jQuery( '#' + i + '_forminput' ).text( mediaWiki.msg( 'maps-load-failed' ) );
-		}
-	}	
-});
+	$( document ).ready( function() {
+
+		$( '.sminput-googlemaps3' ).each( function() {
+			var $this = $( this );
+			$this.openlayersinput( $this.attr( 'id' ), jQuery.parseJSON( $this.find( 'div').text() ) );
+		} );
+
+	} );
+
+})( window.jQuery );
\ No newline at end of file
diff --git a/includes/services/YahooMaps/ext.sm.yahoomaps.js b/includes/services/YahooMaps/ext.sm.yahoomaps.js
index 1e9ea4f..081ae9e 100644
--- a/includes/services/YahooMaps/ext.sm.yahoomaps.js
+++ b/includes/services/YahooMaps/ext.sm.yahoomaps.js
@@ -1,25 +1,19 @@
 /**
  * JavaScript for the Yahoo! Maps form input in the Semantic Maps extension.
- * @see http://www.mediawiki.org/wiki/Extension:Semantic_Maps
- * 
- * @since 1.0
- * @ingroup SemanticMaps
- * 
+ * @see https://www.mediawiki.org/wiki/Extension:Semantic_Maps
+ *
  * @licence GNU GPL v2+
  * @author Jeroen De Dauw <jeroendedauw at gmail dot com>
  */
+(function( $ ) {
 
-jQuery(document).ready(function() {
-	if ( true ) {
-		for ( i in window.mwmaps.yahoomaps_forminputs ) {
-			jQuery( '#' + i + '_forminput' ).yahoomapsinput( i, window.mwmaps.yahoomaps_forminputs[i] );
-		}
-	}
-	else {
-		alert( mediaWiki.msg( 'maps-yahoomaps-incompatbrowser' ) );
-		
-		for ( i in window.mwmaps.yahoomaps_forminputs ) {
-			jQuery( '#' + i + '_forminput' ).text( mediaWiki.msg( 'maps-load-failed' ) );
-		}
-	}	
-});
+	$( document ).ready( function() {
+
+		$( '.sminput-googlemaps3' ).each( function() {
+			var $this = $( this );
+			$this.yahoomapsinput( $this.attr( 'id' ), jQuery.parseJSON( $this.find( 'div').text() ) );
+		} );
+
+	} );
+
+})( window.jQuery );
\ No newline at end of file
-- 
1.7.9.5

