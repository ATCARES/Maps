From 4329042d2cfbc414d98a2b3f38b2917bbd59a4c0 Mon Sep 17 00:00:00 2001
From: Kim Eik <kim@heldig.org>
Date: Thu, 19 Apr 2012 09:52:44 +0200
Subject: [PATCH 05/32] added optional parameter to only show polygons on
 hover.

as an example, this syntax would enable it.

{{#display_line:Bergen
|polygons=Bergen:Stavanger:Oslo:Bergen~title~text~#00FF00~10~1~#0000FF~0.4~on
}}

note the last parameter "on" if this last parameter is not set
or set to off/false/0, then polygons will always be visible.

this has been enabled for both openlayers and googlemaps service providers.

Change-Id: I3bca7b4fd0b0e6507aa196802d1a2861aadb5b93
---
 includes/Maps_Polygon.php                         |  120 ++++++++++++---------
 includes/manipulations/Maps_ParamPolygon.php      |   64 +++++------
 includes/services/GoogleMaps3/jquery.googlemap.js |   26 +++++
 includes/services/OpenLayers/jquery.openlayers.js |   68 ++++++++----
 4 files changed, 176 insertions(+), 102 deletions(-)

diff --git a/includes/Maps_Polygon.php b/includes/Maps_Polygon.php
index a6306f9..51ac2ae 100644
--- a/includes/Maps_Polygon.php
+++ b/includes/Maps_Polygon.php
@@ -13,64 +13,84 @@
 class MapsPolygon extends MapsLine{
 
 
-    /**
-     * @var
-     */
-    protected $fillColor;
+	/**
+	 * @var
+	 */
+	protected $fillColor;
 
-    /**
-     * @var
-     */
-    protected $fillOpacity;
+	/**
+	 * @var
+	 */
+	protected $fillOpacity;
 
+	/**
+	 * @var
+	 */
+	protected $onlyVisibleOnHover = false;
 
-    public function getJSONObject( $defText = '', $defTitle = '') {
-        $parentArray = parent::getJSONObject($defText,$defTitle);
-        $array = array(
-            'fillColor' => $this->hasFillColor() ? $this->getFillColor() : '#FF0000',
-            'fillOpacity' => $this->hasFillOpacity() ? $this->getFillOpacity() : 0.5
-        );
-        return array_merge($parentArray,$array);
-    }
 
-    private function hasFillColor(){
-        return $this->fillColor !== '';
-    }
+	public function getJSONObject( $defText = '', $defTitle = '') {
+		$parentArray = parent::getJSONObject($defText,$defTitle);
+		$array = array(
+			'fillColor' => $this->hasFillColor() ? $this->getFillColor() : '#FF0000',
+			'fillOpacity' => $this->hasFillOpacity() ? $this->getFillOpacity() : 0.5,
+			'onlyVisibleOnHover' => $this->isOnlyVisibleOnHover(),
+		);
+		return array_merge($parentArray,$array);
+	}
 
-    private function hasFillOpacity(){
-        return $this->fillOpacity !== '';
-    }
+	private function hasFillColor(){
+		return $this->fillColor !== '';
+	}
 
-    /**
-     * @return
-     */
-    public function getFillOpacity()
-    {
-        return $this->fillOpacity;
-    }
+	private function hasFillOpacity(){
+		return $this->fillOpacity !== '';
+	}
 
-    /**
-     * @param  $fillOpacity
-     */
-    public function setFillOpacity($fillOpacity)
-    {
-        $this->fillOpacity = $fillOpacity;
-    }
+	/**
+	 * @return
+	 */
+	public function getFillOpacity()
+	{
+		return $this->fillOpacity;
+	}
 
-    /**
-     * @return
-     */
-    public function getFillColor()
-    {
-        return $this->fillColor;
-    }
+	/**
+	 * @param  $fillOpacity
+	 */
+	public function setFillOpacity($fillOpacity)
+	{
+		$this->fillOpacity = $fillOpacity;
+	}
 
-    /**
-     * @param  $fillColor
-     */
-    public function setFillColor($fillColor)
-    {
-        $this->fillColor = $fillColor;
-    }
+	/**
+	 * @return
+	 */
+	public function getFillColor()
+	{
+		return $this->fillColor;
+	}
+
+	/**
+	 * @param  $fillColor
+	 */
+	public function setFillColor($fillColor)
+	{
+		$this->fillColor = $fillColor;
+	}
+
+	/**
+	 * @param $visible
+	 */
+	public function setOnlyVisibleOnHover($visible){
+		$this->onlyVisibleOnHover = $visible;
+	}
+
+	/**
+	 * @return mixed
+	 */
+	public function isOnlyVisibleOnHover(){
+		return $this->onlyVisibleOnHover;
+	}
 
 }
diff --git a/includes/manipulations/Maps_ParamPolygon.php b/includes/manipulations/Maps_ParamPolygon.php
index a3e90a4..79c8665 100644
--- a/includes/manipulations/Maps_ParamPolygon.php
+++ b/includes/manipulations/Maps_ParamPolygon.php
@@ -1,39 +1,43 @@
 <?php
 class MapsParamPolygon extends ItemParameterManipulation {
 
-    protected $metaDataSeparator;
+	protected $metaDataSeparator;
 
-    public function __construct( $metaDataSeparator ) {
-        parent::__construct();
+	public function __construct( $metaDataSeparator ) {
+		parent::__construct();
 
-        $this->metaDataSeparator = $metaDataSeparator;
-    }
+		$this->metaDataSeparator = $metaDataSeparator;
+	}
 
-    /**
-     * Manipulate an actual value.
-     *
-     * @param string $value
-     * @param Parameter $parameter
-     * @param array $parameters
-     *
-     * @since 0.4
-     *
-     * @return mixed
-     */
-    public function doManipulation(&$value, Parameter $parameter, array &$parameters)
-    {
-      $parts = explode($this->metaDataSeparator,$value);
-      $polygonCoords = explode(':',$parts[0]);
+	/**
+	 * Manipulate an actual value.
+	 *
+	 * @param string $value
+	 * @param Parameter $parameter
+	 * @param array $parameters
+	 *
+	 * @since 0.4
+	 *
+	 * @return mixed
+	 */
+	public function doManipulation(&$value, Parameter $parameter, array &$parameters)
+	{
+		$parts = explode($this->metaDataSeparator,$value);
+		$polygonCoords = explode(':',$parts[0]);
 
-      $value = new MapsPolygon($polygonCoords);
-      $value->setTitle( isset($parts[1]) ? $parts[1] : '' );
-      $value->setText( isset($parts[2]) ? $parts[2] : '' );
-      $value->setStrokeColor( isset($parts[3]) ? $parts[3] : '' );
-      $value->setStrokeOpacity( isset($parts[4]) ? $parts[4] : '' );
-      $value->setStrokeWeight( isset($parts[5]) ? $parts[5] : '' );
-      $value->setFillColor(isset($parts[6]) ? $parts[6] : '');
-      $value->setFillOpacity(isset($parts[7]) ? $parts[7] : '');
+		$value = new MapsPolygon($polygonCoords);
+		$value->setTitle( isset($parts[1]) ? $parts[1] : '' );
+		$value->setText( isset($parts[2]) ? $parts[2] : '' );
+		$value->setStrokeColor( isset($parts[3]) ? $parts[3] : '' );
+		$value->setStrokeOpacity( isset($parts[4]) ? $parts[4] : '' );
+		$value->setStrokeWeight( isset($parts[5]) ? $parts[5] : '' );
+		$value->setFillColor(isset($parts[6]) ? $parts[6] : '');
+		$value->setFillOpacity(isset($parts[7]) ? $parts[7] : '');
 
-      $value = $value->getJSONObject();
-    }
+		if(isset($parts[8])){
+			$value->setOnlyVisibleOnHover(filter_var($parts[8], FILTER_VALIDATE_BOOLEAN));
+		}
+
+		$value = $value->getJSONObject();
+	}
 }
\ No newline at end of file
diff --git a/includes/services/GoogleMaps3/jquery.googlemap.js b/includes/services/GoogleMaps3/jquery.googlemap.js
index 107ca95..d660352 100644
--- a/includes/services/GoogleMaps3/jquery.googlemap.js
+++ b/includes/services/GoogleMaps3/jquery.googlemap.js
@@ -209,6 +209,32 @@
         });
         this.polygons.push(polygon);
 
+        //add hover event/effect
+        if(properties.onlyVisibleOnHover === true){
+
+            function hidePolygon(polygon) {
+                polygon.setOptions({
+                    fillOpacity:0,
+                    strokeOpacity:0
+                });
+            }
+
+            hidePolygon(polygon);
+
+            google.maps.event.addListener(polygon,"mouseover",function(){
+                this.setOptions({
+                    fillOpacity: properties.fillOpacity,
+                    strokeOpacity:properties.strokeOpacity
+                });
+            });
+
+            google.maps.event.addListener(polygon,"mouseout",function(){
+                hidePolygon(this);
+            });
+
+        }
+
+        //add click event
         google.maps.event.addListener(polygon,"click", function(event){
             if (this.openWindow != undefined) {
                 this.openWindow.close();
diff --git a/includes/services/OpenLayers/jquery.openlayers.js b/includes/services/OpenLayers/jquery.openlayers.js
index bdb585a..9b60406 100644
--- a/includes/services/OpenLayers/jquery.openlayers.js
+++ b/includes/services/OpenLayers/jquery.openlayers.js
@@ -140,13 +140,13 @@
         var style = {
             'strokeColor':properties.strokeColor,
             'strokeWidth': properties.strokeWeight,
-            'strokeOpacity': properties.strokeOpacity,
+            'strokeOpacity': properties.onlyVisibleOnHover === true ? 0 : properties.strokeOpacity,
             'fillColor': properties.fillColor,
-            'fillOpacity': properties.fillOpacity
+            'fillOpacity': properties.onlyVisibleOnHover === true ? 0 : properties.fillOpacity
         }
 
         var polygon = new OpenLayers.Geometry.LinearRing(pos);
-        var polygonFeature = new OpenLayers.Feature.Vector(polygon, {text:properties.text}, style);
+        var polygonFeature = new OpenLayers.Feature.Vector(polygon, properties, style);
         this.polygonLayer.addFeatures([polygonFeature]);
     }
 	
@@ -173,8 +173,10 @@
 		}
 		
 		return false;
-	}	
-	
+	}
+
+    var _this = this;
+
 	// Remove the loading map message.
 	this.text( '' );
 	
@@ -202,6 +204,7 @@
 		mapOptions.maxExtent = new OpenLayers.Bounds(-20037508, -20037508, 20037508, 20037508.34);
 	}
 
+
 	this.map = new OpenLayers.Map( mapElementId, mapOptions );
 	var map = this.map;
 	this.addControls( map, options.controls, this.get( 0 ) );
@@ -259,27 +262,48 @@
 
     if(options.polygons && options.polygons.length > 0){
         this.polygonLayer = new OpenLayers.Layer.Vector("Polygon Layer");
-        this.polygonLayer.events.on({
-            'featureselected':function(feature){
-                if(feature.feature.attributes.text != undefined && feature.feature.attributes.text != ''){
-                    var mousePos = map.getControlsByClass("OpenLayers.Control.MousePosition")[0].lastXy
-                    var lonlat = map.getLonLatFromPixel(mousePos);
-                    var popup = new OpenLayers.Popup(null,lonlat, null, feature.feature.attributes.text, true,function(){
-                        map.getControlsByClass('OpenLayers.Control.SelectFeature')[0].unselectAll();
-                        map.removePopup(this);
-                    })
-                    this.map.addPopup( popup );
-                }
-            },
-            'featureunselected':function(feature){
-                //do nothing
-            }
-        });
 
         var controls = {
             select: new OpenLayers.Control.SelectFeature(this.polygonLayer,{
                 clickout: true, toggle: false,
-                multiple: true, hover: false
+                multiple: true, hover: true,
+                callbacks: {
+                    'over':function(feature){
+                        if(feature.attributes.onlyVisibleOnHover === true){
+                            var style = {
+                                'strokeColor':feature.attributes.strokeColor,
+                                'strokeWidth': feature.attributes.strokeWeight,
+                                'strokeOpacity': feature.attributes.strokeOpacity,
+                                'fillColor': feature.attributes.fillColor,
+                                'fillOpacity': feature.attributes.fillOpacity
+                            }
+                            _this.polygonLayer.drawFeature(feature,style);
+                        }
+                    },
+                    'out':function(feature){
+                        if(feature.attributes.onlyVisibleOnHover === true && _this.map.popups.length === 0){
+                            var style = {
+                                'strokeColor':feature.attributes.strokeColor,
+                                'strokeWidth': feature.attributes.strokeWeight,
+                                'strokeOpacity': 0,
+                                'fillColor': feature.attributes.fillColor,
+                                'fillOpacity': 0
+                            }
+                            _this.polygonLayer.drawFeature(feature,style);
+                        }
+                    },
+                    'click':function(feature){
+                        if(feature.attributes.text != undefined && feature.attributes.text != ''){
+                            var mousePos = map.getControlsByClass("OpenLayers.Control.MousePosition")[0].lastXy
+                            var lonlat = map.getLonLatFromPixel(mousePos);
+                            var popup = new OpenLayers.Popup(null,lonlat, null, feature.attributes.text, true,function(){
+                                map.getControlsByClass('OpenLayers.Control.SelectFeature')[0].unselectAll();
+                                map.removePopup(this);
+                            })
+                            this.map.addPopup( popup );
+                        }
+                    }
+                }
             })
         };
 
-- 
1.7.9.5

